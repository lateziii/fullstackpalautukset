{"ast":null,"code":"var _jsxFileName = \"/Users/lauriturkia/OneDrive - O365 Turun yliopisto/fullstackpalautukset/fullstackpalautukset/01/unicafe 1.6 - 1.14/unicafe/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StatisticLine = ({\n  text,\n  value\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 4,\n    columnNumber: 10\n  }, this);\n};\n\n_c = StatisticLine;\n\nconst Statistics = props => {\n  const kaikki = props.allClicks.length;\n  const posit = props.good / kaikki;\n  const keskiarvo = (props.good + props.bad * -1) / kaikki;\n\n  if (kaikki === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n        text: \"good\",\n        value: props.good\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"neutral \", props.neutral]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"bad \", props.bad]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"all \", kaikki]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"average \", keskiarvo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"positive \", posit]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n};\n\n_c2 = Statistics;\n\nconst Button = ({\n  handleClick,\n  label\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClick,\n    children: label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n};\n\n_c3 = Button;\n\nconst App = () => {\n  _s();\n\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const [allClicks, setAll] = useState([]);\n\n  const handleGoodClick = () => {\n    setAll(allClicks.concat('N'));\n    setGood(good + 1);\n  };\n\n  const handleNeutralClick = () => {\n    setAll(allClicks.concat('N'));\n    setNeutral(neutral + 1);\n  };\n\n  const handleBadClick = () => {\n    setAll(allClicks.concat('B'));\n    setBad(bad + 1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \" give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleGoodClick,\n        label: \"good\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleNeutralClick,\n        label: \"neutral\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        handleClick: handleBadClick,\n        label: \"bad\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(Statistics, {\n          good: good,\n          bad: bad,\n          neutral: neutral,\n          allClicks: allClicks\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"kJ9y7XsO0w0mFdvux+TBa35t1sE=\");\n\n_c4 = App;\nexport default App;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"StatisticLine\");\n$RefreshReg$(_c2, \"Statistics\");\n$RefreshReg$(_c3, \"Button\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"sources":["/Users/lauriturkia/OneDrive - O365 Turun yliopisto/fullstackpalautukset/fullstackpalautukset/01/unicafe 1.6 - 1.14/unicafe/src/App.js"],"names":["React","useState","StatisticLine","text","value","Statistics","props","kaikki","allClicks","length","posit","good","keskiarvo","bad","neutral","Button","handleClick","label","App","setGood","setNeutral","setBad","setAll","handleGoodClick","concat","handleNeutralClick","handleBadClick"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n\nconst StatisticLine = ({ text, value}) => {\n  return(<p>{text} {value}</p>)\n}\nconst Statistics = (props) => {\n  const kaikki = props.allClicks.length;\n  const posit = props.good/kaikki\n  const keskiarvo = (props.good + props.bad *-1)/kaikki;\n  if (kaikki === 0) {\n    return(\n      <div>\n        <p>No feedback given</p>\n      </div>\n    )\n  } else {\n    return(\n      <div>\n        <StatisticLine text=\"good\" value={props.good}></StatisticLine>\n        <p>neutral {props.neutral}</p>\n        <p>bad {props.bad}</p> \n        <p>all {kaikki}</p>\n        <p>\n            average {keskiarvo}\n        </p>\n        <p>positive {posit}</p>\n      </div>\n    )\n  }\n\n}\nconst Button = ({ handleClick, label }) => {\n  return <button onClick={handleClick}>{label}</button>;\n};\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  const [allClicks, setAll] = useState([])\n\n  const handleGoodClick = () => {\n    setAll(allClicks.concat('N'))\n    setGood(good + 1)\n  }\n  const handleNeutralClick = () => {\n    setAll(allClicks.concat('N'))\n    setNeutral(neutral + 1)\n  }\n  const handleBadClick = () => {\n    setAll(allClicks.concat('B'))\n    setBad(bad + 1)\n  }\n\n  return (\n    <div>\n      <h1> give feedback</h1>\n       <div>\n        <Button handleClick={handleGoodClick} label=\"good\"></Button>\n        <Button handleClick={handleNeutralClick} label=\"neutral\"></Button>\n        <Button handleClick={handleBadClick} label=\"bad\"></Button>\n      </div>\n      <div>\n        <h1>statistics</h1> \n        <p><Statistics good={good} bad={bad} neutral={neutral} allClicks={allClicks}></Statistics></p>\n        \n      </div>\n    </div>\n  )\n}\n\nexport default App"]},"metadata":{},"sourceType":"module"}